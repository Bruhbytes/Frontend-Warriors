{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport { createPopper } from '@popperjs/core';\nvar Default = {\n  placement: 'top',\n  triggerType: 'hover',\n  onShow: function () {},\n  onHide: function () {}\n};\nvar Tooltip = /** @class */function () {\n  function Tooltip(targetEl, triggerEl, options) {\n    if (targetEl === void 0) {\n      targetEl = null;\n    }\n    if (triggerEl === void 0) {\n      triggerEl = null;\n    }\n    if (options === void 0) {\n      options = Default;\n    }\n    this._targetEl = targetEl;\n    this._triggerEl = triggerEl;\n    this._options = __assign(__assign({}, Default), options);\n    this._popperInstance = this._createPopperInstance();\n    this._init();\n  }\n  Tooltip.prototype._init = function () {\n    var _this = this;\n    if (this._triggerEl) {\n      var triggerEvents = this._getTriggerEvents();\n      triggerEvents.showEvents.forEach(function (ev) {\n        _this._triggerEl.addEventListener(ev, function () {\n          _this.show();\n        });\n      });\n      triggerEvents.hideEvents.forEach(function (ev) {\n        _this._triggerEl.addEventListener(ev, function () {\n          _this.hide();\n        });\n      });\n    }\n  };\n  Tooltip.prototype._createPopperInstance = function () {\n    return createPopper(this._triggerEl, this._targetEl, {\n      placement: this._options.placement,\n      modifiers: [{\n        name: 'offset',\n        options: {\n          offset: [0, 8]\n        }\n      }]\n    });\n  };\n  Tooltip.prototype._getTriggerEvents = function () {\n    switch (this._options.triggerType) {\n      case 'hover':\n        return {\n          showEvents: ['mouseenter', 'focus'],\n          hideEvents: ['mouseleave', 'blur']\n        };\n      case 'click':\n        return {\n          showEvents: ['click', 'focus'],\n          hideEvents: ['focusout', 'blur']\n        };\n      default:\n        return {\n          showEvents: ['mouseenter', 'focus'],\n          hideEvents: ['mouseleave', 'blur']\n        };\n    }\n  };\n  Tooltip.prototype.show = function () {\n    this._targetEl.classList.remove('opacity-0', 'invisible');\n    this._targetEl.classList.add('opacity-100', 'visible');\n    // Enable the event listeners\n    this._popperInstance.setOptions(function (options) {\n      return __assign(__assign({}, options), {\n        modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [{\n          name: 'eventListeners',\n          enabled: true\n        }], false)\n      });\n    });\n    // Update its position\n    this._popperInstance.update();\n    // callback function\n    this._options.onShow(this);\n  };\n  Tooltip.prototype.hide = function () {\n    this._targetEl.classList.remove('opacity-100', 'visible');\n    this._targetEl.classList.add('opacity-0', 'invisible');\n    // Disable the event listeners\n    this._popperInstance.setOptions(function (options) {\n      return __assign(__assign({}, options), {\n        modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [{\n          name: 'eventListeners',\n          enabled: false\n        }], false)\n      });\n    });\n    // callback function\n    this._options.onHide(this);\n  };\n  return Tooltip;\n}();\nif (typeof window !== 'undefined') {\n  window.Tooltip = Tooltip;\n}\nexport function initTooltips() {\n  document.querySelectorAll('[data-tooltip-target]').forEach(function ($triggerEl) {\n    var tooltipId = $triggerEl.getAttribute('data-tooltip-target');\n    var $tooltipEl = document.getElementById(tooltipId);\n    if ($tooltipEl) {\n      var triggerType = $triggerEl.getAttribute('data-tooltip-trigger');\n      var placement = $triggerEl.getAttribute('data-tooltip-placement');\n      new Tooltip($tooltipEl, $triggerEl, {\n        placement: placement ? placement : Default.placement,\n        triggerType: triggerType ? triggerType : Default.triggerType\n      });\n    } else {\n      console.error(\"The tooltip element with id \\\"\".concat(tooltipId, \"\\\" does not exist. Please check the data-tooltip-target attribute.\"));\n    }\n  });\n}\nexport default Tooltip;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,YAAY,QAAQ,gBAAgB;AAQ7C,IAAMC,OAAO,GAAmB;EAC5BC,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAE,OAAO;EACpBC,MAAM,EAAE,aAAO,CAAC;EAChBC,MAAM,EAAE,aAAO;CAClB;AAED;EAMI,iBACIC,QAAmC,EACnCC,SAAoC,EACpCC,OAAiC;IAFjC;MAAAF,eAAmC;IAAA;IACnC;MAAAC,gBAAoC;IAAA;IACpC;MAAAC,iBAAiC;IAAA;IAEjC,IAAI,CAACC,SAAS,GAAGH,QAAQ;IACzB,IAAI,CAACI,UAAU,GAAGH,SAAS;IAC3B,IAAI,CAACI,QAAQ,yBAAQV,OAAO,GAAKO,OAAO,CAAE;IAC1C,IAAI,CAACI,eAAe,GAAG,IAAI,CAACC,qBAAqB,EAAE;IACnD,IAAI,CAACC,KAAK,EAAE;EAChB;EAEAC,uBAAK,GAAL;IAAA;IACI,IAAI,IAAI,CAACL,UAAU,EAAE;MACjB,IAAMM,aAAa,GAAG,IAAI,CAACC,iBAAiB,EAAE;MAC9CD,aAAa,CAACE,UAAU,CAACC,OAAO,CAAC,UAACC,EAAE;QAChCC,KAAI,CAACX,UAAU,CAACY,gBAAgB,CAACF,EAAE,EAAE;UACjCC,KAAI,CAACE,IAAI,EAAE;QACf,CAAC,CAAC;MACN,CAAC,CAAC;MACFP,aAAa,CAACQ,UAAU,CAACL,OAAO,CAAC,UAACC,EAAE;QAChCC,KAAI,CAACX,UAAU,CAACY,gBAAgB,CAACF,EAAE,EAAE;UACjCC,KAAI,CAACI,IAAI,EAAE;QACf,CAAC,CAAC;MACN,CAAC,CAAC;;EAEV,CAAC;EAEOV,uCAAqB,GAA7B;IACI,OAAOf,YAAY,CAAC,IAAI,CAACU,UAAU,EAAE,IAAI,CAACD,SAAS,EAAE;MACjDP,SAAS,EAAE,IAAI,CAACS,QAAQ,CAACT,SAAS;MAClCwB,SAAS,EAAE,CACP;QACIC,IAAI,EAAE,QAAQ;QACdnB,OAAO,EAAE;UACLoB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;;OAEpB;KAER,CAAC;EACN,CAAC;EAEOb,mCAAiB,GAAzB;IACI,QAAQ,IAAI,CAACJ,QAAQ,CAACR,WAAW;MAC7B,KAAK,OAAO;QACR,OAAO;UACHe,UAAU,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC;UACnCM,UAAU,EAAE,CAAC,YAAY,EAAE,MAAM;SACpC;MACL,KAAK,OAAO;QACR,OAAO;UACHN,UAAU,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;UAC9BM,UAAU,EAAE,CAAC,UAAU,EAAE,MAAM;SAClC;MACL;QACI,OAAO;UACHN,UAAU,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC;UACnCM,UAAU,EAAE,CAAC,YAAY,EAAE,MAAM;SACpC;IAAC;EAEd,CAAC;EAEDT,sBAAI,GAAJ;IACI,IAAI,CAACN,SAAS,CAACoB,SAAS,CAACC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC;IACzD,IAAI,CAACrB,SAAS,CAACoB,SAAS,CAACE,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;IAEtD;IACA,IAAI,CAACnB,eAAe,CAACoB,UAAU,CAAC,UAACxB,OAAsB;MAAK,6BACrDA,OAAO;QACVkB,SAAS,kCACFlB,OAAO,CAACkB,SAAS,UACpB;UAAEC,IAAI,EAAE,gBAAgB;UAAEM,OAAO,EAAE;QAAI,CAAE;;IAJW,CAM1D,CAAC;IAEH;IACA,IAAI,CAACrB,eAAe,CAACsB,MAAM,EAAE;IAE7B;IACA,IAAI,CAACvB,QAAQ,CAACP,MAAM,CAAC,IAAI,CAAC;EAC9B,CAAC;EAEDW,sBAAI,GAAJ;IACI,IAAI,CAACN,SAAS,CAACoB,SAAS,CAACC,MAAM,CAAC,aAAa,EAAE,SAAS,CAAC;IACzD,IAAI,CAACrB,SAAS,CAACoB,SAAS,CAACE,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC;IAEtD;IACA,IAAI,CAACnB,eAAe,CAACoB,UAAU,CAAC,UAACxB,OAAsB;MAAK,6BACrDA,OAAO;QACVkB,SAAS,kCACFlB,OAAO,CAACkB,SAAS,UACpB;UAAEC,IAAI,EAAE,gBAAgB;UAAEM,OAAO,EAAE;QAAK,CAAE;;IAJU,CAM1D,CAAC;IAEH;IACA,IAAI,CAACtB,QAAQ,CAACN,MAAM,CAAC,IAAI,CAAC;EAC9B,CAAC;EACL,cAAC;AAAD,CAAC,EAxGD;AA0GA,IAAI,OAAO8B,MAAM,KAAK,WAAW,EAAE;EAC/BA,MAAM,CAACpB,OAAO,GAAGA,OAAO;;AAG5B,OAAM,SAAUqB,YAAY;EACxBC,QAAQ,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,CAACnB,OAAO,CAAC,UAACoB,UAAU;IAClE,IAAMC,SAAS,GAAGD,UAAU,CAACE,YAAY,CAAC,qBAAqB,CAAC;IAChE,IAAMC,UAAU,GAAGL,QAAQ,CAACM,cAAc,CAACH,SAAS,CAAC;IAErD,IAAIE,UAAU,EAAE;MACZ,IAAMvC,WAAW,GAAGoC,UAAU,CAACE,YAAY,CAAC,sBAAsB,CAAC;MACnE,IAAMvC,SAAS,GAAGqC,UAAU,CAACE,YAAY,CAAC,wBAAwB,CAAC;MAEnE,IAAI1B,OAAO,CACP2B,UAAyB,EACzBH,UAAyB,EACzB;QACIrC,SAAS,EAAEA,SAAS,GAAGA,SAAS,GAAGD,OAAO,CAACC,SAAS;QACpDC,WAAW,EAAEA,WAAW,GAClBA,WAAW,GACXF,OAAO,CAACE;OACC,CACtB;KACJ,MAAM;MACHyC,OAAO,CAACC,KAAK,CACT,wCAAgCL,SAAS,uEAAmE,CAC/G;;EAET,CAAC,CAAC;AACN;AAEA,eAAezB,OAAO","names":["createPopper","Default","placement","triggerType","onShow","onHide","targetEl","triggerEl","options","_targetEl","_triggerEl","_options","_popperInstance","_createPopperInstance","_init","Tooltip","triggerEvents","_getTriggerEvents","showEvents","forEach","ev","_this","addEventListener","show","hideEvents","hide","modifiers","name","offset","classList","remove","add","setOptions","enabled","update","window","initTooltips","document","querySelectorAll","$triggerEl","tooltipId","getAttribute","$tooltipEl","getElementById","console","error"],"sources":["../../../../src/components/tooltip/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}